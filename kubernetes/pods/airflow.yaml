apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    type: orchestation
  name: airflow
spec:
  containers:
  - image: mgarcia92/airflow:v2
    imagePullPolicy: "Always"
    name: airflow
    resources: {}
    env: 
      - name: AIRFLOW_HOME
        value: /opt/airflow/
      - name: AIRFLOW__CORE__DAGS_FOLDER
        value: /opt/airflow/personal_dags
      - name: AIRFLOW__CORE__LOAD_EXAMPLES      
        value: "False"
    command: ["bash", "-c", "airflow db init && airflow users create --role Admin --username mgarcia92 --email marcelo.garcia.c92@gmail.com --firstname Marcelo --lastname Garcia --password Apolo && airflow webserver"]
    ports:
      - containerPort: 8080
    volumeMounts:
      - mountPath: /opt/airflow/personal_dags
        name: airflow-dags
  dnsPolicy: ClusterFirst
  restartPolicy: Always
  volumes:
    - name: airflow-dags
      configMap:
        name: airflow-dag
status: {}

#pip install apache-airflow-providers-apache-spark && pip install apache-airflow-providers-cncf-kubernetes
#command: ["bash", "-c", "airflow db init && airflow users create --role Admin --username mgarcia92 --email marcelo.garcia.c92@gmail.com --firstname Marcelo --lastname Garcia --password Apolo && airflow connections add 'spark_default' --conn-type 'http' --conn-host 'spark://spark-master:7077' && airflow webserver"]
